@namespace(uri="org.kurz.ma.model.umltransformation", prefix="uml2uml")
package org.kurz.ma.model.umltransformation;

class Root {
	val UseCase[+] useCases;
}

class UseCase {
	attr String[1] name;
	attr String[+] umlUseCases; // This requires the Names of the UML Use-Cases that are included in the transformation.
	val TransformationRule[+] transformationRules; // This represents the rules that are applied to the elements in question
	val Requirement[*] requirement;
}

abstract class TransformationRule {
	attr String[1] name;
}

abstract class Requirement {
	attr String[1] name;
}

// Transformations
class NullTransformation extends TransformationRule { // This Transformation does not change the model in any way.
}

class IncreaseMessageTime extends TransformationRule { // This Transformation adds time to a Message within an interaction
	attr String[+] messageName;
	attr Integer[1] time;
	attr TimeUnit[1] timeUnit;
}

// Misc
enum TimeUnit {
	NANO;
	MICRO;
	MILLI;
	SECOND;
	MINUTE;
	HOUR;
	DAY; 
}